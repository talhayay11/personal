{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\talha\\\\Documents\\\\GitHub\\\\personal\\\\src\\\\components\\\\Projects.js\";\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  const projects = [{\n    title: \"Proje 1\",\n    description: \"Proje açıklaması buraya gelecek\",\n    technologies: [\"React\", \"Node.js\", \"MongoDB\"],\n    link: \"#\"\n  }, {\n    title: \"Proje 2\",\n    description: \"Proje açıklaması buraya gelecek\",\n    technologies: [\"React\", \"Firebase\", \"Tailwind CSS\"],\n    link: \"#\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"projects\",\n    className: \"projects\",\n    children: [/*#__PURE__*/_jsxDEV(motion.h2, {\n      initial: {\n        opacity: 0,\n        y: 20\n      },\n      whileInView: {\n        opacity: 1,\n        y: 0\n      },\n      transition: {\n        duration: 0.8\n      },\n      viewport: {\n        once: true\n      },\n      children: \"Projelerim\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"project-grid\",\n      initial: {\n        opacity: 0,\n        y: 20\n      },\n      whileInView: {\n        opacity: 1,\n        y: 0\n      },\n      transition: {\n        duration: 0.8,\n        delay: 0.2\n      },\n      viewport: {\n        once: true\n      },\n      children: projects.map((project, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"project-card\",\n        whileHover: {\n          scale: 1.05\n        },\n        whileTap: {\n          scale: 0.95\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: project.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: project.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"technologies\",\n          children: project.technologies.map((tech, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tech-tag\",\n            children: tech\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: project.link,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"Projeyi G\\xF6r\\xFCnt\\xFCle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","motion","jsxDEV","_jsxDEV","Projects","projects","title","description","technologies","link","id","className","children","h2","initial","opacity","y","whileInView","transition","duration","viewport","once","fileName","_jsxFileName","lineNumber","columnNumber","div","delay","map","project","index","whileHover","scale","whileTap","tech","i","href","target","rel","_c","$RefreshReg$"],"sources":["C:/Users/talha/Documents/GitHub/personal/src/components/Projects.js"],"sourcesContent":["import React from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst Projects = () => {\r\n  const projects = [\r\n    {\r\n      title: \"Proje 1\",\r\n      description: \"Proje açıklaması buraya gelecek\",\r\n      technologies: [\"React\", \"Node.js\", \"MongoDB\"],\r\n      link: \"#\"\r\n    },\r\n    {\r\n      title: \"Proje 2\",\r\n      description: \"Proje açıklaması buraya gelecek\",\r\n      technologies: [\"React\", \"Firebase\", \"Tailwind CSS\"],\r\n      link: \"#\"\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <section id=\"projects\" className=\"projects\">\r\n      <motion.h2\r\n        initial={{ opacity: 0, y: 20 }}\r\n        whileInView={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.8 }}\r\n        viewport={{ once: true }}\r\n      >\r\n        Projelerim\r\n      </motion.h2>\r\n      <motion.div\r\n        className=\"project-grid\"\r\n        initial={{ opacity: 0, y: 20 }}\r\n        whileInView={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.8, delay: 0.2 }}\r\n        viewport={{ once: true }}\r\n      >\r\n        {projects.map((project, index) => (\r\n          <motion.div\r\n            key={index}\r\n            className=\"project-card\"\r\n            whileHover={{ scale: 1.05 }}\r\n            whileTap={{ scale: 0.95 }}\r\n          >\r\n            <h3>{project.title}</h3>\r\n            <p>{project.description}</p>\r\n            <div className=\"technologies\">\r\n              {project.technologies.map((tech, i) => (\r\n                <span key={i} className=\"tech-tag\">{tech}</span>\r\n              ))}\r\n            </div>\r\n            <a href={project.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              Projeyi Görüntüle\r\n            </a>\r\n          </motion.div>\r\n        ))}\r\n      </motion.div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Projects; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB,MAAMC,QAAQ,GAAG,CACf;IACEC,KAAK,EAAE,SAAS;IAChBC,WAAW,EAAE,iCAAiC;IAC9CC,YAAY,EAAE,CAAC,OAAO,EAAE,SAAS,EAAE,SAAS,CAAC;IAC7CC,IAAI,EAAE;EACR,CAAC,EACD;IACEH,KAAK,EAAE,SAAS;IAChBC,WAAW,EAAE,iCAAiC;IAC9CC,YAAY,EAAE,CAAC,OAAO,EAAE,UAAU,EAAE,cAAc,CAAC;IACnDC,IAAI,EAAE;EACR,CAAC,CACF;EAED,oBACEN,OAAA;IAASO,EAAE,EAAC,UAAU;IAACC,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACzCT,OAAA,CAACF,MAAM,CAACY,EAAE;MACRC,OAAO,EAAE;QAAEC,OAAO,EAAE,CAAC;QAAEC,CAAC,EAAE;MAAG,CAAE;MAC/BC,WAAW,EAAE;QAAEF,OAAO,EAAE,CAAC;QAAEC,CAAC,EAAE;MAAE,CAAE;MAClCE,UAAU,EAAE;QAAEC,QAAQ,EAAE;MAAI,CAAE;MAC9BC,QAAQ,EAAE;QAAEC,IAAI,EAAE;MAAK,CAAE;MAAAT,QAAA,EAC1B;IAED;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC,eACZtB,OAAA,CAACF,MAAM,CAACyB,GAAG;MACTf,SAAS,EAAC,cAAc;MACxBG,OAAO,EAAE;QAAEC,OAAO,EAAE,CAAC;QAAEC,CAAC,EAAE;MAAG,CAAE;MAC/BC,WAAW,EAAE;QAAEF,OAAO,EAAE,CAAC;QAAEC,CAAC,EAAE;MAAE,CAAE;MAClCE,UAAU,EAAE;QAAEC,QAAQ,EAAE,GAAG;QAAEQ,KAAK,EAAE;MAAI,CAAE;MAC1CP,QAAQ,EAAE;QAAEC,IAAI,EAAE;MAAK,CAAE;MAAAT,QAAA,EAExBP,QAAQ,CAACuB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3B3B,OAAA,CAACF,MAAM,CAACyB,GAAG;QAETf,SAAS,EAAC,cAAc;QACxBoB,UAAU,EAAE;UAAEC,KAAK,EAAE;QAAK,CAAE;QAC5BC,QAAQ,EAAE;UAAED,KAAK,EAAE;QAAK,CAAE;QAAApB,QAAA,gBAE1BT,OAAA;UAAAS,QAAA,EAAKiB,OAAO,CAACvB;QAAK;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxBtB,OAAA;UAAAS,QAAA,EAAIiB,OAAO,CAACtB;QAAW;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5BtB,OAAA;UAAKQ,SAAS,EAAC,cAAc;UAAAC,QAAA,EAC1BiB,OAAO,CAACrB,YAAY,CAACoB,GAAG,CAAC,CAACM,IAAI,EAAEC,CAAC,kBAChChC,OAAA;YAAcQ,SAAS,EAAC,UAAU;YAAAC,QAAA,EAAEsB;UAAI,GAA7BC,CAAC;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAmC,CAChD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNtB,OAAA;UAAGiC,IAAI,EAAEP,OAAO,CAACpB,IAAK;UAAC4B,MAAM,EAAC,QAAQ;UAACC,GAAG,EAAC,qBAAqB;UAAA1B,QAAA,EAAC;QAEjE;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA,GAdCK,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAeA,CACb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAACc,EAAA,GAvDInC,QAAQ;AAyDd,eAAeA,QAAQ;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}